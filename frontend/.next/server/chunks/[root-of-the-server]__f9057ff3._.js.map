{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Mani/Desktop/live_detect/frontend/src/app/api/streams/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\n\r\ntype StreamRecord = {\r\n\t id: string;\r\n\t name: string;\r\n\t url: string;\r\n\t status: \"pending\" | \"connected\" | \"error\";\r\n};\r\n\r\n// In-memory placeholder store (for local dev only)\r\nconst streams: StreamRecord[] = [];\r\n\r\nexport async function GET() {\r\n\treturn NextResponse.json({ streams });\r\n}\r\n\r\nexport async function POST(request: Request) {\r\n\ttry {\r\n\t\tconst body = await request.json();\r\n\t\tconst name: string = (body?.name ?? \"\").toString().trim();\r\n\t\tconst url: string = (body?.url ?? \"\").toString().trim();\r\n\r\n\t\tif (!name || !url) {\r\n\t\t\treturn NextResponse.json(\r\n\t\t\t\t{ error: \"Both 'name' and 'url' (RTSP) are required.\" },\r\n\t\t\t\t{ status: 400 }\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\t// Very light RTSP-ish validation (placeholder)\r\n\t\tif (!/^rtsp(s)?:\\/\\//i.test(url)) {\r\n\t\t\treturn NextResponse.json(\r\n\t\t\t\t{ error: \"URL must be an RTSP link (e.g., rtsp://...).\" },\r\n\t\t\t\t{ status: 400 }\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tconst record: StreamRecord = {\r\n\t\t\tid: crypto.randomUUID(),\r\n\t\t\tname,\r\n\t\t\turl,\r\n\t\t\tstatus: \"pending\",\r\n\t\t};\r\n\t\tstreams.push(record);\r\n\r\n\t\t// NOTE: In production, call your backend here to register the stream\r\n\t\t// and return whatever metadata you need to render the player.\r\n\r\n\t\treturn NextResponse.json({ stream: record }, { status: 201 });\r\n\t} catch (err) {\r\n\t\treturn NextResponse.json(\r\n\t\t\t{ error: \"Invalid request body.\" },\r\n\t\t\t{ status: 400 }\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport async function DELETE(request: Request) {\r\n\tconst { searchParams } = new URL(request.url);\r\n\tconst id = searchParams.get(\"id\");\r\n\tif (!id) return NextResponse.json({ error: \"id is required\" }, { status: 400 });\r\n\tconst idx = streams.findIndex((s) => s.id === id);\r\n\tif (idx === -1) return NextResponse.json({ error: \"not found\" }, { status: 404 });\r\n\tconst [removed] = streams.splice(idx, 1);\r\n\treturn NextResponse.json({ removed });\r\n}\r\n\r\n\r\nexport async function PATCH(request: Request) {\r\n\ttry {\r\n\t\tconst body = await request.json();\r\n\t\tconst id: string = (body?.id ?? \"\").toString();\r\n\t\tconst name: string = (body?.name ?? \"\").toString().trim();\r\n\t\tif (!id || !name) {\r\n\t\t\treturn NextResponse.json(\r\n\t\t\t\t{ error: \"Both 'id' and 'name' are required.\" },\r\n\t\t\t\t{ status: 400 }\r\n\t\t\t);\r\n\t\t}\r\n\t\tconst record = streams.find((s) => s.id === id);\r\n\t\tif (!record) {\r\n\t\t\treturn NextResponse.json({ error: \"not found\" }, { status: 404 });\r\n\t\t}\r\n\t\trecord.name = name;\r\n\t\treturn NextResponse.json({ stream: record });\r\n\t} catch (err) {\r\n\t\treturn NextResponse.json({ error: \"Invalid request body.\" }, { status: 400 });\r\n\t}\r\n}\r\n\r\n\r\n"],"names":[],"mappings":";;;;;;;;;;AAAA;;AASA,mDAAmD;AACnD,MAAM,UAA0B,EAAE;AAE3B,eAAe;IACrB,OAAO,gJAAY,CAAC,IAAI,CAAC;QAAE;IAAQ;AACpC;AAEO,eAAe,KAAK,OAAgB;IAC1C,IAAI;QACH,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,OAAe,CAAC,MAAM,QAAQ,EAAE,EAAE,QAAQ,GAAG,IAAI;QACvD,MAAM,MAAc,CAAC,MAAM,OAAO,EAAE,EAAE,QAAQ,GAAG,IAAI;QAErD,IAAI,CAAC,QAAQ,CAAC,KAAK;YAClB,OAAO,gJAAY,CAAC,IAAI,CACvB;gBAAE,OAAO;YAA6C,GACtD;gBAAE,QAAQ;YAAI;QAEhB;QAEA,+CAA+C;QAC/C,IAAI,CAAC,kBAAkB,IAAI,CAAC,MAAM;YACjC,OAAO,gJAAY,CAAC,IAAI,CACvB;gBAAE,OAAO;YAA+C,GACxD;gBAAE,QAAQ;YAAI;QAEhB;QAEA,MAAM,SAAuB;YAC5B,IAAI,OAAO,UAAU;YACrB;YACA;YACA,QAAQ;QACT;QACA,QAAQ,IAAI,CAAC;QAEb,qEAAqE;QACrE,8DAA8D;QAE9D,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,QAAQ;QAAO,GAAG;YAAE,QAAQ;QAAI;IAC5D,EAAE,OAAO,KAAK;QACb,OAAO,gJAAY,CAAC,IAAI,CACvB;YAAE,OAAO;QAAwB,GACjC;YAAE,QAAQ;QAAI;IAEhB;AACD;AAEO,eAAe,OAAO,OAAgB;IAC5C,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;IAC5C,MAAM,KAAK,aAAa,GAAG,CAAC;IAC5B,IAAI,CAAC,IAAI,OAAO,gJAAY,CAAC,IAAI,CAAC;QAAE,OAAO;IAAiB,GAAG;QAAE,QAAQ;IAAI;IAC7E,MAAM,MAAM,QAAQ,SAAS,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK;IAC9C,IAAI,QAAQ,CAAC,GAAG,OAAO,gJAAY,CAAC,IAAI,CAAC;QAAE,OAAO;IAAY,GAAG;QAAE,QAAQ;IAAI;IAC/E,MAAM,CAAC,QAAQ,GAAG,QAAQ,MAAM,CAAC,KAAK;IACtC,OAAO,gJAAY,CAAC,IAAI,CAAC;QAAE;IAAQ;AACpC;AAGO,eAAe,MAAM,OAAgB;IAC3C,IAAI;QACH,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,KAAa,CAAC,MAAM,MAAM,EAAE,EAAE,QAAQ;QAC5C,MAAM,OAAe,CAAC,MAAM,QAAQ,EAAE,EAAE,QAAQ,GAAG,IAAI;QACvD,IAAI,CAAC,MAAM,CAAC,MAAM;YACjB,OAAO,gJAAY,CAAC,IAAI,CACvB;gBAAE,OAAO;YAAqC,GAC9C;gBAAE,QAAQ;YAAI;QAEhB;QACA,MAAM,SAAS,QAAQ,IAAI,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK;QAC5C,IAAI,CAAC,QAAQ;YACZ,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAY,GAAG;gBAAE,QAAQ;YAAI;QAChE;QACA,OAAO,IAAI,GAAG;QACd,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,QAAQ;QAAO;IAC3C,EAAE,OAAO,KAAK;QACb,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAwB,GAAG;YAAE,QAAQ;QAAI;IAC5E;AACD","debugId":null}}]
}